1.ionic项目月报，项目填报   projectfilling  monthly-report

后退按钮就用this.nav.back();能保存前一个页面信息。但是无法刷新那个页面，即便navigate也不行，不调用接口，所以要靠传递参数来手动更新dom数据。注意：通过params传递的参数，会随着页面跳转增多而消失，所以每次跳转都要传递这个参数。

private 不能在同一个类里获取其length ？当然不是，这不是private的锅，而是调取length的数组为空！！！所以每一步都必须给出判断限制。

this.http.post().subscribe()获取远程数据的函数，最好在ngOnInit()里的setTimeout(()=>{});

const file = (<HTMLInputElement>document.getElementById('inputUploadfiles')).files[0];   如果不加<HTMLInputElement>就会一直报错：类型“HTMLElement”上不存在属性“files

//dom没加载完，无法addEventListener****************
  fileSelect;fileElem;fileList;
  ionViewDidEnter() {
  this.fileSelect = document.getElementById("fileSelect");
  this.fileElem = document.getElementById("fileElem");
  this.fileList = document.getElementById("fileList");
  }
  // @HostListener('window:onload',['$event']) 
  @HostListener('click', ['$event'])
  // window.onload = function () {
  onClick(event) {
    if (event.path[0].id === "fileSelect") {
      if (this.fileSelect) {
        this.fileSelect.addEventListener("click", e => {
          e.preventDefault(); // prevent navigation to "#"
          if (this.fileElem) {
            this.fileElem.click();
          }
        }, false);
        this.fileElem.addEventListener("change", this.handleFiles, false);
      }
    }
    console.log("filefamily:", this.fileSelect, this.fileList, this.fileElem,event,event.path[0].id)
  };


隐藏input，同时关联button到input的(change)，来上传文件。
src\app\gov\project\monthly-report\project-status\project-status.page.ts
 <div style="font-size: 15px;margin: 10px 0px 0px 14px;color:#797979">
    
    <div style="margin-bottom:8px">上传附件:</div>

    <input type="file" id="_file" multiple style="display: none;" (change)="selectFile($event)">
    <div Button style="margin-left: 2%;margin-top: 4px;" [type]="'ghost'" [inline]="true" [size]="'small'" (click)="_selectFile()">上传附件</div>
    <ul>
      <li style="width: 96%;margin-left: 2%;color: #0c88e9;" *ngFor="let item of fileList;">
        <span style="display: inline-block;width: 90%;text-align: left;overflow: hidden;text-overflow: ellipsis;white-space: nowrap;" (click)="jump(item)">{{item.name || item.cDocumentName}}</span>
        <span style="display: inline-block;width: 10%;text-align: center;color: red;vertical-align: top;" (click)="deleteEnclosure(item)">删除</span>
      </li>
    </ul>
</div> 

  _selectFile() {
      this.el.nativeElement.querySelector('#_file').click();
    }
 // 实际导入
  selectFile(e: any) {
    let fileList = e.target.files;
    const tempList = ['doc', 'docx', 'xls', 'xlsx' , 'pdf' , 'jpg' , 'png'];
    fileList = Array.from(fileList);
    for (let i = 0, len = fileList.length; i < len; ++i) {
      let suffix = fileList[i].name.split('.');
      suffix = suffix[suffix.length - 1];
      // tslint:disable-next-line: only-arrow-functions
      if (tempList.every( function(value) {return value !== suffix; })) {
        this.toast.info('不允许上传除word，excel, 图片 , pdf 之外的文件，已自动筛除', 3000);
        fileList.splice(i, 1);
        --i;
        --len;
        continue;
      }
      let x = true;
      for (let j = 0, _len = this.fileList.length; j < _len; ++j) {
        if (fileList[i].name === this.fileList[j].name) {
          this.toast.info('发现重复的文件，已自动筛除', 3000);
          x = false;
          break;
        }
      }
      if (x) {
        this.fileList.push(fileList[i]);
        // this.fileListBeifen.push(fileList[i]);
        // console.log( this.fileListBeifen);
      }
    }
  }


ionic的提示框是this.toast.show(res.msg);或者自定义的信息。
import { NzMessageService } from 'ng-zorro-antd/message';
    private message: NzMessageService,
antd的提示是this.message.error(res.msg);

Flex绘制移动端表格，FlexItem  flex-grow:2不均匀分配表格，border-right。
showPicker() 自制下拉多列选择组件。也可以在<div>内部用table表格。

两个组件大部分内容相同，能否注入或传值？或使用同一个函数？

listOfData不是数组了，而是只有一个元素。
this.listOfDisplayData[0].yueBao说无法读取undefined的属性yueBao，那说明前面这个可能不存在，所以要对[0]这个采用?:三元运算符。

navProject(projectObj) {//只能传一个对象，而且内部属性值不能再是对象，所以要拆拆。
    let tPro = projectObj.project
    let tmpPro = {yueBao:projectObj.yueBao,selectedDate:new Date(this.dataObj.dYuliu7),...tPro}
    console.log("navPro:",projectObj,tmpPro)
    this.router.navigate(['/gov/project/monthly-report/projectfilling'], 
        {queryParams:tmpPro});
  }
或者不拆，而是直接
  jump(data: any, id,valDate) {
    data = JSON.stringify(data);
    this.router.navigate(['/gov/project/monthly-report/project-status'], {queryParams: {data, id,valDate}});
  }
新页面调用，直接在ngOnInit里this.route.queryParams.subscribe(queryParams => {
	if(queryParmams.id){
      		this.id = queryParams.id;
	}
}这个是可以接收不同页面传送的参数，前提是要有if判断是否存在，且不同名。

移动端绘制类似toggle的tab选项卡：
  <div class="schedule-tab">
    <div class="schedule-tab-content" >
      <div (click)="clickTab(1)" class="schedule-tab-item" [ngStyle]="{'backgroundColor': isCheck?'#ffffff':'#f5f5f5'}">项目数据</div>
      <div (click)="clickTab(2)" class="schedule-tab-item" [ngStyle]="{'backgroundColor': isCheck?'#f5f5f5':'#ffffff'}">项目流程</div>
    </div>
  </div>

.schedule-tab {
    width: 100%;
    height: 60px;
    background-color: #ffffff;
    padding:10px 30px;
}

.schedule-tab-content {
    width: 100%;
    height: 40px;
    padding: 2px 3px;
    background-color: #f5f5f5;
    border: solid 1px #ffffff;
    border-radius: 15px;
}

.schedule-tab-item {
    width: 50%;
    float: left;
    text-align: center;
    height: 34px;
    line-height: 34px;
    border: solid 1px #f5f5f5;
    border-radius: 10px;
    font-size: 15px;
}




浏览器中点击input输入框时，placeholder的值不消失的方法 ， blur() 方法用于移除文本域的焦点。
<input type="text" placeholder="请输入" onfocus="this.placeholder=''" onblur="this.placeholder='请输入'">


placeholder右对齐的写法，兼容性比较高的一种方法 
::-webkit-input-placeholder { /* WebKit browsers */
    direction: rtl;
}
:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    direction: rtl;
}
::-moz-placeholder { /* Mozilla Firefox 19+ but I'm not sure about working */
    direction: rtl;
}
:-ms-input-placeholder { /* Internet Explorer 10+ */
    direction: rtl;
}

用showpicker()做的日期选择就不会随着 this.nav.navigateBack('/tabs/workbench/allapp');而丢失数据；但是ionic自带的datepicker就会丢失日期，所以返回按钮用    window.history.back();为了跳转后保存当前页的数据，还可以用session.put,或者传递一个request到新页面再返回。
但是当跳转前的页面无法修改时，返回按钮，到底是返回到哪里了？必须小心。能否用路由守卫？能否定义一个记录历史地址的service？
alllink的back.service.ts是绑定了什么？

也可以this.router.navigate(['url'],{queryParams:{参数1:实参1,参数2:实参2}});
这个好处是可以从多个组件返回值到同一个组件，只要在该接收组件判断this.route.queryParams.subscribe(queryParams => {  if(queryParams.参数1){}})
所以要在接收组件里进行判断，即便是只有一个组件（一组参数）会跳过去。

ionic的日期最大最小
this.maxDate = new Date(this.value.getFullYear()+"-12-31:00:00:00")
this.minDate = new Date(this.maxDate.getFullYear()+"-01-01:00:00:00")


************ionic打包遇到了很多问题，sdk用android命令打开，看看有没有命令
ionic cordova platform add android 需要的版本，
以及环境变量 set | findstr /I android
ionic cordova build android  //编译debug版本
ionic cordova build android --verbose --warning-mode all
ionic cordova build android --prod //prod优化代码提升运行速度


遇到一个大问题是 no java file extend CordovaActivity  找到爆出这个问题的prepare.js后，将if里的throw语句注销，
出现The "path" argument must be of type string. 于是怀疑是path函数的问题，于是在path的每个参数后面加了 || ''  希望可以跳过这个问题，但还是不行。
再看是哪个java文件extend CordovaActivity 呢？是/platforms/android/app/src/main/java/com/sdjy/zwalllink/MainActivity.java
于是在if语句里直接赋值，但发现const声明的变量不能二次赋值，于是将其改为let。同事路径要绝对路径，终于跳过了这步prepared。


gradle过大,添加daemon
Windows下：
（window）/Users/”your pc_name”/.gradle

Linux下：（在home/${user}目录下创建gradle.properties）

touch ~/.gradle/gradle.properties && echo "org.gradle.daemon=true" >> ~/.gradle/gradle.properties
也可以先下载好gradle，然后添加CORDOVA_ANDROID_GRADLE_DISTRIBUTION_URL环境变量为gradle压缩包地址。

又出现android版本问题，prepare.js里修改
const minSdkVersion = '21' || this._config.getPreference('android-minSdkVersion', 'android');
最后修改了config.xml里的版本号为22

MainActivity.java IDEA 错误:非法字符:“\ufeff”解决方案
出现的问题：

　　　　（在UTF-8编码格式下）出现非法字符   然后启动项目失败

解决：用sublime将出现非法字符的文件内容剪切出来，使之形成一个空文件，然后转码成GBK，保存、构建，然后再转成UTF-8，再次保存、构建，然后把刚刚剪切出来的代码复制进去。

安装打开后白屏，ionic cordova plugin remove cordova-plugin-ionic-webview 


upload(){
    const file = (<HTMLInputElement>document.getElementById('inputUploadfiles')).files[0];	
    this.files.push(file)
    const formData = new FormData();
    const xhr = new XMLHttpRequest();	
    
    xhr.open('POST', 
        // this.appConfig.microSeverStr+
        this.userInfo.cFileServerInfo +
        '/Sys_DocumentLibray_CNICM/upLoadImageDocument/' +
        this.userInfo.account.iSysID +
        '/' +
        this.userInfo.cUserName,
     true);	
    xhr.onreadystatechange = function() {	
      if (xhr.readyState == 4 && xhr.status == 200) {	
        alert(xhr.responseText);	
      }	
    };	
    // xhr.setRequestHeader("content-type", "application/x-www-form-urlencoded");
    this.files.forEach((file: any, index) => {
      formData.append('files[]' + index, file);
    });
    let tmpXhr = xhr.send(formData);	
  }