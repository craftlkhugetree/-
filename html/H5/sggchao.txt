https://www.bilibili.com/video/bv1XJ411X7Ud/?p=11

1.vscode里直接  	!+Tab	新建一个H5页面。  alt+方向：当前行上下移动
alt+shift+方向 复制方向

2. &gt &lt &copy	&nbsp

3.    <meta name="viewport" content="width=device-width, initial-scale=1.0">
关键字viewport的内容是后面的"content"
    <meta name="keywords" content="H5,css3,js,ts">
keywords就是向搜索引擎暴露的，收录content内容。
    <meta name="description" content="搜索结果的简要描述">
    <meta http-equiv="refresh" content="3; url=http://example.com">
3秒后重定向到example网站。
    <title>Document</title>作为搜索结果的超链接文字

4.标签<h1>的重要性仅次于title，一个页面最好只有一个h1。

5.hgroup标签可以将有关联的标题放在一起。

6.strong标签加粗，em标签斜体，都是inline元素。

7.    <blockquote>引用</blockquote>	块级
	<q></q>	行内元素
8.行内元素内不要放块元素，块元素中基本都能放。但是<p>中不能放块元素，虽然看起来也能正常显示，但是浏览器会在内存中自动纠正，也就是Chrome的Elements里显示的。

9.caption 元素定义表格标题。
<table border="6">
<caption>我的标题</caption>
<tr>
  <td>100</td>
  <td>200</td>
  <td>300</td>
</tr>
<tr>
  <td>400</td>
  <td>500</td>
  <td>600</td>
</tr>
</table>

10.header标签可能多个，但是main在一个页面中只有一个，footer也可表示页面某一部分的底部。

11.导航nav，和主体相关的小内容aside，独立的文章article，独立的区块section（比如nav里还有区块，就可以用section，当然用的最多还是div）。  span和div一样没有语义，但是span是行内元素。

12.定义列表dl，定义的内容dt，对内容解释dd缩进。这套可以用在下拉，右拉列表。

13.超链接内部不能放自己<a href="">
（1）target默认值_self，可选值_blank
（2）回到顶部，<a href="#">		前往底部，或是前往页面其他任何位置，可以设置id，这是唯一标识	<a href="#" id="bottom">
（3）占位标签<a href="javascript:;">zhanwei</a>
javascript:是表示在触发默认动作时，执行一段JavaScript代码，是一个伪协议，其他的伪协议还有 mail: tel: file: 
javascript:; 表示什么都不执行，这样点击时就没有任何反应。
 href=”javascript:;”就是去掉a标签的默认行为，跟href=”javascript:void(0)”是一样的，void 是JavaScript 的一个运算符，void(0)就是什么都不做的意思。
简单来说，”javascript:”是另外一种嵌套js代码在网页中的方法。 
    跟通过标签嵌套js代码差不多。 
    如点击下面链接会会执行”javascript:”后面的内容。不过不推荐这种写法。 
    理由是使用标签href属性通常是保存超链接，用来控制页面转向。
 <a href = "javascript:alert(22);">点我</a>


14.img属于替换元素，图片替换了src里的地址，所以img既有块也有行内元素的特点。
alt="对图片的描述，默认不显示，会在图片无法加载时显示"	搜索引擎根据alt来收录
width，height不用加px，只改一个那另一个等比例改变。pc端用多大就切多大，移动端则经常大图缩小。

15.图片的格式，
jpeg(jpg)：支持的颜色比较多，不支持透明，不支持动图。显示照片
gif：支持颜色较少，支持简单透明，支持动图。显示颜色单一的图片，动图。
png：支持颜色丰富，复杂透明，不支持动图。专为网页而生
webp：谷歌新推出，用来表示网页中的图片，具备上述优点，而且小。缺点是兼容性差，比如ie。。

效果一样，用小的；效果不一样，用效果好且不特别大的。

16.base64编码可以直接放在 img的src里，图片编码引入。用在需要和网页一起加载的图片。
浏览器向fwq发送第一次请求，加载了网页，如果有两个外部资源的图片，那么还需要发送2次请求，这俩图片才会逐渐加载出来。而用了base64，那么第一次请求就把图片加载了。

17.内联框架，用于向当前页面中引入其他页面。但不会seo
    <iframe src="https://www.qq.com" width="800" height="600" frameborder="0"></iframe>

18. <audio src="**.mp3" controls></audio>
    <video src="**.mp4" controls></video>
如果不加controls，那么音视频引入时，默认是不允许用户控制播放的。
再加入autoplay，那么打开页面时会自动播放，但大部分浏览器不允许。当然第一次播放后，下面就能自动播放了。还有loop。
不光是ie8不支持标签，还有不同浏览器下播放样式不同，所以还得css+js解决。
    <audio controls>
        对不起，请升级浏览器。用了embed标签，这一行可以注销了。
        <source src="1.mp3"> 
        <source src="1.ogg"> 
	<embed src="" type="audio/mp3" width="300" height="100">可以在兼容ie8播放
    </audio>
这样写，不支持audio标签的还是不支持，忽略标签，但是内部文字可以显示出来。而且万一支持ogg，而不支持mp3格式，这种写法会全支持。

19.由于音视频较大，所以一般不放在服务器上，而是专门的托管网站。iframe

20.css内联样式，也就是行内样式的高内聚  style="color: red;background: rosybrown;"  键值对，冒号，分号。
开发时最好不要内联样式，css离html标签越远越好。
html标签的属性键值对是等号。而controls只有键没有值。

21.内部样式表<style></style>

22.外部样式表    <link rel="stylesheet" href="style.css">
网站首次加载会慢，因为外部资源加载较慢，当再次访问时，这些外部资源已经缓存在浏览器中，速度就快了，比如css文件就是如此，同一个css文件，某个页面用过后，在访问其他使用这个css的页面时，速度就快了。

23.元素选择器，就是标签名。
id选择器，#开头。
类选择器，.开头。多个class用空格隔开。
通配选择器，*。
交集选择器，同时符合多个条件。无空格分隔。一般不用于id，因为id已是唯一。注意：若有，则必须以元素选择器开头。
并集选择器，h1,span{}，同时选择多种选择器。选择器分组。

24.直接包含才是父子元素。祖先元素可以有很多，从父元素开始。后代元素也包括直接和间接。拥有同一个父元素，才叫兄弟元素。
（1）div > span{}父子元素，跟准确一点可以用类  div.box > span{}
（2）div span{} 后代元素
（3）p + span{}	兄弟元素，且紧挨着的一个
（4）p ~ span{}	选择后面的所有兄弟

25.属性选择器
（1）title="abc"	鼠标上去会有提示文字
（2）p[title]{}	属性选择器，有title属性的p标签被选中。
（3）p[属性名=属性值]{}	不但要有属性名，还得是这个属性值的才会被选中。
（4）p[title^=abc]{}	以abc开头的才被选中
（5）p[title$=abc]{}	以abc结尾的才被选中
（6）p[title*=abc]{}	只要有abc即可

26.伪类选择器，特殊的状态。
<ul>
        <li></li>
        <li></li>
        <li></li>

</ul>
（1）要给第一个li加红色，可以用class="first"， ul>li.first{color:red;}，
那么这个类就和该行耦合了，若在这一行之前又加了一个li，那么该行就不是第一行了。
伪类用来指一个元素的特殊状态，比如第一个子元素，某个被点击的元素，鼠标移入的元素。。。
ul>li:first-child{}	
:last-child	
:nth-child(3) 选中第三个子元素，若为n则表示全都选中；2n表示偶数位或even；2n+1奇数位或odd。

:first-of-type	同类型子元素的第一个
:last-of-type
:nth-of-type

（2）:not()	否定伪类	
ul > li:not(:nth-of-type(3)){}

（3）超链接的几种状态：访问过的变色；没访问过的。
a:link{color:red;}	link表示没访问过的链接，实际是正常的链接
a:visited{}		visited表示访问过的，但由于隐私的原因，visited只能修改颜色，不能设置font-size之类的属性。
a:hover{}	鼠标移入
a:active{}	鼠标点击

27.伪元素选择器，不存在的元素。特殊的位置。
（1）首字母下沉，	p#weilei::first-letter{font-size:50px;}
（2）p::first-line{background-color:red;}	即便伸缩，也只是第一行变红
（3）p::selection{background-color:yellow;}	鼠标选中的内容变色
（4）div::before{content:'abc';color:red;}	div后的那个缝
div::after{content:'xyz';color:blue;}		div前的那个缝

28.样式的继承，一个元素的样式也会应用到它的后代。祖先和后代之间。
默认有继承，所以是有利的，但是必然也有不利之处。所以颜色可以继承，而背景不能继承（默认背景为透明）

29.选择器的权重
行内（内联样式）	1,0,0,0	style="color:red;"	用内联样式，很难用css去改，所以少用。
id		0,1,0,0	
类和伪类选择器	0,0,1,0
元素选择器	1
通配选择器	0
继承的样式	无
100个类累加也不会超过id的优先级。如果优先级相等，则优先使用靠下的样式。
在某个样式后边添加!important，则变为最高优先级，甚至超过内联样式。但要慎用！！！

30.同样的200px在不同的显示屏上可能显示效果不一样。
em相对于元素的字体大小来计算，1em=1font-size，em随字体大小而变。
rem相对于根元素的字体大小来计算，html{font-size:30px;}。

31.颜色单位：
英文名red，orange；
RGB值，0-255（0-100%）；
RGBA(106,153,85,.5)半不透明，1是完全不透明；
十六进制的RGB，#ffffff白色，两两重复可以写成#bfa->#bbffaa
HSL值，HSLA值，在ps工业里用的较多。H色相0-360闭环（0=360=红），S饱和度（颜色浓度0-100%），L亮度（颜色的亮度0-100%）

0都表示没有颜色，就是黑；255表示最亮白色。

32.文档流，网页多层结构，一层摞着一层，用户只能看到最顶上一层。这些层中的最底层就是文档流，我们所创建的元素默认都是在文档流中排列。
元素的两个状态：在文档流，脱离文档流。

33.文档流中，块元素默认宽度为父元素全部，默认高度被内容撑开。独占一行。自上向下垂直排列。
文档流中，行内元素不会独占一行，自左向右水平排列，高度和宽度都是被内容撑开。

34.盒子模型，页面中的所有东西都是盒子。页面布局就是把不同的盒子放到不同的位置。
盒子的组成：content、padding、border、margin
border-width默认大约3px，上右下左。三个值：上、左右、下。两个值：上下、左右。
		border-top-width...
border-color默认使用color:颜色；规则与上相同。所以color不单只是字体，它是前景色，包括字体、边框等。。。
border-style：solid、dotted、dashed、double、默认为none。
border:这种方式，三者没有顺序。	
		border-top:none;

35.内边距的设置会影响盒子大小，背景色会延伸到padding内。但是内容不会延伸到padding里。
padding:10px 20px;
padding-top:	padding-bottom:

36.margin不会影响盒子大小，但是影响实际占用的大小。margin-top使元素下移，margin-left使自己右移。而下和右挤别人，不影响自己。如果设置为负值，则往反方向移动。

37.盒子的水平布局
元素在其父元素的水平位置由七个因素决定，总和为父元素内容区的宽度。
	.box1 {
            width: 800px;
            height: 200px;
            background-color: #bfa;
            border-width: 10px;
            border-color: red;
            border-style: solid;
            padding: 10px;
        }
        .inner{
            width: 200px;
            height: 100%;
            background-color: orange;
        }
0+0+0+200+0+0+0	= 800	！！！必须满足，若不成立，则为过度约束，浏览器要自动调整，若无auto情况，那么调整margin-right:600px。
其中width（默认为auto）,margin-left（0）,margin-right可以设置为auto，浏览器会在过度约束时，自动调整auto。
若宽度和一个外边距为auto，则这个外边距变为零，宽度会调整为最大。
若三者都是auto，这外边距都是零，宽度最大。
若两个外边距为auto，则两个外边距平分。
 <div class="box1">
        <div class="inner">
            div1
        </div>
 </div>

